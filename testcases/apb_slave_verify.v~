parameter TCR=12'h00;
parameter TDR0=12'h04;
parameter TDR1=12'h08;
parameter TCMP0=12'hC;
parameter TCMP1=12'h10;
parameter TIER=12'h14;
parameter TISR=12'h18;
parameter THCSR=12'h1C;
task run_test();
	begin 
	fail_num=0;
	$display("====PAT NAME:apb_slave_verify=======");
	//wait state R/W access
	$display("WAIT STATE R/W access");
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0000_0000;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);

	check_value("TCMP0",32'h00000000,tim_prdata);
	$display("pready is high after 1 cycle penable is high");
	@(posedge sys_clk);
	tim_pwdata=32'h5555_5555;
	write_reg(TCMP1);
	@(posedge sys_clk);
	read_reg(TCMP1);
	check_value("TCMP1",32'h55555555,tim_prdata);
	$display("pready is high after 1 cycle penable is high");
	@(posedge sys_clk);
	tim_pwdata=32'hAAAA_AAAA;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hAAAAAAAA,tim_prdata);
	$display("pready is high after 1 cycle penable is high");
	@(posedge sys_clk);
	tim_pwdata=32'hffff_ffff;
	write_reg(TCMP1);
	@(posedge sys_clk);
	read_reg(TCMP1);
	check_value("TCMP1",32'hffffffff,tim_prdata);
	@(posedge sys_clk);
	tim_pwdata=32'hffff_ffff;
	write_reg(12'hfff);
	@(posedge sys_clk);
	read_reg(12'hfff);
	//ACCESS to IDLE 
	@(posedge sys_clk);
	tim_pwdata=32'hA5A5_A5A5;
	write_access_idle(TDR0);
	@(posedge sys_clk);
	read_access_idle(TDR0);
	check_value(TDR0,32'h0000_0000,tim_prdata);



	// check penable=0
	$display("check penable=0");
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_paddr=TCMP0;
	tim_pwrite=1;
	tim_pwdata=32'h11112222;
	tim_penable=0;
	tim_psel=1;
	@(posedge sys_clk);
	tim_pwrite=0;
	tim_psel=0;
	@(posedge sys_clk);
	if(tim_pready==1) begin 
		$display("==================");
		$display("FAILED: penable=0 -> pready=0");
		$display("==================");
	end else begin 
		$display("==================");
		$display("PASS: pready=0");
		$display("==================");
	end
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffffffff,tim_prdata);
	// check error  when psel error test 
	@(posedge sys_clk);
	tim_pwdata=32'h7777_7777;
	error_psel_test(TDR0);
	@(posedge sys_clk);
	read_reg(TDR0);//check read normally
	check_value(TDR0,32'h0000_0000,tim_prdata);
	read_reg_error(TDR0);
	check_value(TDR0,32'h0000_0000,tim_prdata);
	@(posedge sys_clk);
	tim_pwdata=32'hffff_ffff;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value(TCMP0,32'hffff_ffff,tim_prdata);

	$display("pready is high after 1 cycle penable is high");
	// BYTE ACCESS
	$display("BYTE ACCESS check");
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b0000;
	tim_pwdata=32'h1111_1111;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffffffff,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0001;
	tim_pwdata=32'ha5a5_a5a5;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffffffa5,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0010;
	tim_pwdata=32'h5555_5555;
	write_reg(TCMP1);
	@(posedge sys_clk);
	read_reg(TCMP1);
	check_value("TCMP1",32'hffff55ff,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0011;
	tim_pwdata=32'hffff_ffff;
	write_reg(TDR0);
	@(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h0000ffff,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0100;
	tim_pwdata=32'haaaa_aaaa;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffaaffa5,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0101;
	tim_pwdata=32'hbbbb_bbbb;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffbbffbb,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0110;
	tim_pwdata=32'hcccc_cccc;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffccccbb,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b0111;
	tim_pwdata=32'hdddd_dddd;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hffdddddd,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1000;
	tim_pwdata=32'haaaa_aaaa;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'haadddddd,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1001;
	tim_pwdata=32'hc5c5_c5c5;
	write_reg(TCMP1);
	@(posedge sys_clk);
	read_reg(TCMP1);
	check_value("TCMP1",32'hc5ff55c5,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1010;
	tim_pwdata=32'hdada_dada;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'hdadddadd,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1011;
	tim_pwdata=32'h2222_1111;
	write_reg(TCMP0);
	@(posedge sys_clk);
	read_reg(TCMP0);
	check_value("TCMP0",32'h22dd1111,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1100;
	tim_pwdata=32'haaaa_aaaa;
	write_reg(TCMP1);
	@(posedge sys_clk);
	read_reg(TCMP1);
	check_value("TCMP0",32'haaaa55c5,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1101;
	tim_pwdata=32'h3333_4444;
	write_reg(TDR0);
	@(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h3333ff44,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1110;
	tim_pwdata=32'h3333_4444;
	write_reg(TDR1);
	@(posedge sys_clk);
	read_reg(TDR1);
	check_value("TDR1",32'h33334400,tim_prdata);
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'hAAAA_AAAA;
	write_reg(TDR1);
	@(posedge sys_clk);
	read_reg(TDR1);
        check_value("TDR1",32'hAAAAAAAA,tim_prdata);

	// ERROR HANDLING
	$display("error handling check");
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'hffff_f9f0;
	write_reg(TCR);
	if(tim_pslverr==1) begin 
		$display("===========================");
		$display("PASS: pslverr==1 when div_val >8 ");
		$display("===========================");
	end else begin 
		$display("===========================");
		$display("FAIL: pslverr==0 when div_val >8 ");
		$display("===========================");
	end
	@(posedge sys_clk);
	tim_pwdata=32'hffff_f01;
	write_reg(TCR);
	@(posedge sys_clk);
	read_reg(TCR);
	check_value("TCR",32'h00000100,tim_prdata);
	@(posedge sys_clk);
	tim_pwdata=32'h55555451;
	write_reg(TCR);
	@(posedge sys_clk);
	read_reg(TCR);	
	check_value("TCR",32'h00000401,tim_prdata);
	@(posedge sys_clk);
	tim_pwdata=32'h0A01;
	tim_paddr=TCR;
	tim_psel=0;
	tim_penable=0;
	tim_pwrite=1;
	@(posedge sys_clk);
	tim_penable=1;
	repeat(3) @(posedge sys_clk);
	tim_penable=0;
	tim_pwrite=0;
	@(posedge sys_clk);
	read_reg(TCR);
	check_value("TCR",32'h00000401,tim_prdata);
	// check tcr_div_val  when pstrb[1]=0 and wr
	@(posedge sys_clk);
	tim_pstrb=4'b1101;
	tim_pwdata=32'hffff_f2f1;
	write_reg(TCR);
	if(tim_pslverr==0) begin 
		$display("===========================");
		$display("PASS: pslverr==0 when tcr_div_val=0, pstrb[1]=0 ");
		$display("===========================");
	end else begin 
		$display("===========================");
		$display("FAIL: pslverr==1 when tcr_div_val=0, pstrb[1]=0 ");
		$display("===========================");
	end
	// check tcr_div_en when pstrb[0]=0 and write to TCR
	@(posedge sys_clk);
	tim_pstrb=4'b1110;
	tim_pwdata=32'hffff_f2f1;
	write_reg(TCR);
	if(tim_pslverr==1) begin 
		$display("===========================");
		$display("PASS: pslverr==1 when tcr_div_val=0, pstrb[0]=0 ");
		$display("===========================");
	end else begin 
		$display("===========================");
		$display("FAIL: pslverr==0 when tcr_div_val=0, pstrb[0]=0 ");
		$display("===========================");
	end
	// check error_respone when tcr_div_en=1
	@(posedge sys_clk);
	tim_pstrb=4'b0001;
	tim_pwdata=32'h02;
	write_reg(TCR);
	if(tim_pslverr==1) begin 
		$display("===========================");
		$display("PASS: pslverr==1 when tcr_div_val=0, pstrb[0]=0 ");
		$display("===========================");
	end else begin 
		$display("===========================");
		$display("FAIL: pslverr==0 when tcr_div_val=0, pstrb[0]=0 ");
		$display("===========================");
	end

	
	if(fail_num ==0) begin 
		$display("test result is PASSED");
	end else begin 
		$display("test result is FAILED");
	end 
	end
endtask

