parameter TCR=12'h00;
parameter TDR0=12'h04;
parameter TDR1=12'h08;
parameter TCMP0=12'hC;
parameter TCMP1=12'h10;
parameter TIER=12'h14;
parameter TISR=12'h18;
parameter THCSR=12'h1C;
task run_test();
	begin 
	fail_num=0;
	$display("====PAT NAME:HALT_MODE_verify=======");
	// checking condition of halt mode  
	$display("checking condition of halt mode");
	// check halt_mode when halt_req=1, dbg_mode=1
	sys_rst_n=0;
	@(posedge sys_clk) 
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h05;
	write_reg(TCMP0);
	@(posedge sys_clk);
	tim_pwdata=32'h0203;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(TIER);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(THCSR);
	@(posedge sys_clk);
	read_reg(THCSR);
	check_value("THCSR",32'h00000003,tim_prdata);
	//check halt mode when halt_req=0, dbg_mode=1
	$display("check halt mode when halt_req=0");
	@(posedge sys_clk);
	tim_pwdata=32'h0;
	write_reg(THCSR);
	@(posedge sys_clk);
	read_reg(THCSR);
	check_value("THCSR",32'h00000000,tim_prdata);
	@(posedge sys_clk);
	read_reg(TDR0);
	//check halt mode when dbg_mode=0
	$display("check halt mode when dbg_mode=0");
	dbg_mode=0;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h05;
	write_reg(TCMP0);
	@(posedge sys_clk);
	tim_pwdata=32'h0203;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(TIER);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(THCSR);
	@(posedge sys_clk);
	read_reg(THCSR);
	check_value("THCSR",32'h00000001,tim_prdata);
	// check halt_req=1 when dbg_mode=0
	dbg_mode=0;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h01;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h00;
	write_reg(TCMP0);
	write_reg(TDR0);
	@(posedge sys_clk);
	tim_pwdata=32'h00;
	write_reg(THCSR);
	@(posedge sys_clk);
	read_reg(THCSR);
	check_value(THCSR,32'h00,tim_prdata);
	// system reset when halt
	$display("system reset when halt");
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h05;
	write_reg(TCMP0);
	@(posedge sys_clk);
	tim_pwdata=32'h0203;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(TIER);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(THCSR);
	@(posedge sys_clk);
	read_reg(THCSR);
	check_value("THCSR",32'h00000000,tim_prdata);
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h05;
	write_reg(TCMP0);
	@(posedge sys_clk);
	tim_pwdata=32'h0203;
	write_reg(TCR);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(TIER);
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(THCSR);
	@(posedge sys_clk);
	tim_pwdata=32'h020;
	write_reg(TDR0);
	@(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000021,tim_prdata);
	if(fail_num !=1) begin 
		$display("test result is PASSED");
	end else begin 
		$display("test result is FAILED");
	end 
	end
endtask
