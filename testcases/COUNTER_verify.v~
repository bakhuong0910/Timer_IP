parameter TCR=12'h00;
parameter TDR0=12'h04;
parameter TDR1=12'h08;
parameter TCMP0=12'hC;
parameter TCMP1=12'h10;
parameter TIER=12'h14;
parameter TISR=12'h18;
parameter THCSR=12'h1C;
task run_test();
	begin 
	fail_num=0;
	$display("====PAT NAME:COUNTER_verify=======");
	//enable count test
	$display("enable count test");
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0000_0403;	
	write_reg(TCR);
	repeat(13) @(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000001,tim_prdata);
	repeat(13) @(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000002,tim_prdata);
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0000_0000;
	write_reg(TDR0);
	write_reg(TDR1);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0503;	
	write_reg(TCR);
	repeat(29) @(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000001,tim_prdata);
	repeat(29)@(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000002,tim_prdata);
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'h0000_0000;
	write_reg(TDR0);
	write_reg(TDR1);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0603;	
	write_reg(TCR);
	repeat(61) @(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000001,tim_prdata);
	repeat(61)@(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h00000002,tim_prdata);
	// check cnt_clr when tim_en=0
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0000;
	write_reg(TDR0);
	write_reg(TDR1);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0602;
	write_reg(TCR);
	repeat(10) @(posedge sys_clk);
	read_reg(TDR0);
	check_value(TDR0,32'h0000_0000,tim_prdata);


	// reset during counting 
	$display("reset during counting");
	repeat (2)@(posedge sys_clk);
	sys_rst_n=0;
	read_reg("TDR0");
	check_value("TDR0",32'h00000000,tim_prdata);
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pstrb=4'b1111;
	tim_pwdata=32'hffff_ffff;
	write_reg(TDR0);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0000;
	write_reg(TDR1);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0103;	
	write_reg(TCR);
	repeat(20) @(posedge sys_clk);
	read_reg(TDR0);
	check_value("TDR0",32'h0000000A,tim_prdata);
	// test with different div_val
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0000;
	write_reg(TCMP0);
	write_reg(TCMP1);
	write_reg(TDR0);
	write_reg(TDR1);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0003;
	write_reg(TCR);
	repeat(5) @(posedge sys_clk);
	read_reg(TDR0);
	check_value(TDR0,32'h08,tim_prdata);
	//div_val=2;
	@(posedge sys_clk);
	sys_rst_n=0;
	@(posedge sys_clk);
	sys_rst_n=1;
	@(posedge sys_clk);
	tim_pwdata=32'h0;
	write_reg(TCMP0);
	write_reg(TCMP1);
	write_reg(TDR0);
	write_reg(TDR1);
	@(posedge sys_clk);
	tim_pwdata=32'h0000_0203;
	write_reg(TCR);
	repeat(6) @(posedge sys_clk);
	read_reg(TDR0);
	check_value(TDR0,32'h02,tim_prdata);
	//div_val=3
	@(posedge sys_clk);
        sys_rst_n=0;
        @(posedge sys_clk);
        sys_rst_n=1;
        @(posedge sys_clk);
        tim_pwdata=32'h0;
        write_reg(TCMP0);
        write_reg(TCMP1);
        write_reg(TDR0);
        write_reg(TDR1);
        @(posedge sys_clk);
        tim_pwdata=32'h0000_0303;
        write_reg(TCR);
        repeat(8) @(posedge sys_clk);
        read_reg(TDR0);
        check_value(TDR0,32'h01,tim_prdata);
	//div_val=7
	@(posedge sys_clk);
       sys_rst_n=0;
       @(posedge sys_clk);
       sys_rst_n=1;
       @(posedge sys_clk);
       tim_pwdata=32'h0;
       write_reg(TCMP0);
       write_reg(TCMP1);
       write_reg(TDR0);
       write_reg(TDR1);
       @(posedge sys_clk);
      tim_pwdata=32'h0000_0703;
       write_reg(TCR);
       repeat(125) @(posedge sys_clk);
       read_reg(TDR0);
       check_value(TDR0,32'h01,tim_prdata);
       //div_val=8;
       @(posedge sys_clk);
       sys_rst_n=0;
       @(posedge sys_clk);
       sys_rst_n=1;
       @(posedge sys_clk);
       tim_pwdata=32'h0;
       write_reg(TCMP0);
       write_reg(TCMP1);
       write_reg(TDR0);
       write_reg(TDR1);
       @(posedge sys_clk);
       tim_pwdata=32'h0000_0803;
       write_reg(TCR);
       repeat(253) @(posedge sys_clk);
       read_reg(TDR0);
       check_value(TDR0,32'h01,tim_prdata);
       //default div_val
       @(posedge sys_clk);
       sys_rst_n=0;
       @(posedge sys_clk);
       sys_rst_n=1;
       @(posedge sys_clk);
       tim_pwdata=32'h0;
       write_reg(TCMP0);
       write_reg(TCMP1);
       write_reg(TDR0);
       write_reg(TDR1);
       @(posedge sys_clk);
       tim_pwdata=32'h0000_0903;
       write_reg(TCR);
       repeat(4) @(posedge sys_clk);
       read_reg(TDR0);
       check_value(TDR0,32'h00,tim_prdata);
       //check count_en when div_en=0;
       @(posedge sys_clk);
       tim_pwdata=32'h01;
       write_reg(TCR);
       @(posedge sys_clk);
       // check count_en when halt_ack=1
       tim_pwdata=32'h403;
       write_reg(TCR);
       @(posedge sys_clk);
       tim_pwdata=32'h01;
       write_reg(THCSR);
       repeat(30) @(posedge sys_clk);
       read_reg(TDR0);
       check_value(TDR0,32'h0a,tim_prdata);
       // check cnt_rst when tim_en=0;
       tim_pwdata=32'h302;
       write_reg(TCR);
       @(posedge sys_clk);
       tim_pwdata=32'h02;
	write_reg(TDR0);
	write_reg(TDR1);
	repeat(10) @(posedge sys_clk);
	read_reg(TDR0);
	check_value(TDR0,32'h0000_0002,tim_prdata);
	// check cnt_rst when div_en=0
	@(posedge sys_clk);
	tim_pwdata=32'h01;
	write_reg(TCR);
	repeat(10) @(posedge sys_clk);
	read_reg(TDR0);
	check_value(TDR0,32'h0000_0002,tim_prdata);
	










	
	if(fail_num !=1) begin 
		$display("test result is PASSED");
	end else begin 
		$display("test result is FAILED");
	end 
	end
endtask
